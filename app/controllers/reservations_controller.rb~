class ReservationsController < ApplicationController
  before_action :set_reservation, only: [:show, :edit, :update, :destroy]

  # GET /reservations
  # GET /reservations.json
  def index
    @reservations = Reservation.all
  end

  # GET /reservations/1
  # GET /reservations/1.json
  def show
  end

  # GET /reservations/new
  def new
    
  end

  # GET /reservations/1/edit
  def edit
  end

  # POST /reservations
  # POST /reservations.json
  def create

    room_id=params[:room_id]
    student_id = current_student.id

    if prenotabile(room_id)
      @room=Room.find(room_id)
      
      @reservation=Reservation.new(params[:reservation].permit(:data,:room,:student))
      redirect_to room_path(@room)
      flash[:notice] = "La Prenotazione è stata registrata"

    else
      flash[:notice] = "Non è possibile effettuare una nuova registrazione"

    end
  end

  def prenotabile(room_id)
    id_reservation = params[:id]
    
    
    @room=Room.find(room_id)
    posti_liberi = @room.num_posti_liberi 
    if @room.num_posti_liberi > 0 
      @room.num_posti_liberi = posti_liberi -1
      true
    else
      false
    end
    
  end

  # PATCH/PUT /reservations/1
  # PATCH/PUT /reservations/1.json
  def update
    respond_to do |format|
      if @reservation.update(reservation_params)
        format.html { redirect_to @reservation, notice: 'Reservation was successfully updated.' }
        format.json { render :show, status: :ok, location: @reservation }
      else
        format.html { render :edit }
        format.json { render json: @reservation.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /reservations/1
  # DELETE /reservations/1.json
  def destroy
    room_id = params[:room_id]
    @room= Room.find(room_id)
    @reservation.destroy
    respond_to do |format|
      format.html { redirect_to rooms_path(@room), notice: 'Reservation was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_reservation
      @reservation = Reservation.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def reservation_params
      params.require(:reservation).permit(:room_id, :student_id, :data)
    end
end
